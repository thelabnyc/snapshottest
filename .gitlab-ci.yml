stages:
  - test
  - release

services: []

include:
  - component: gitlab.com/thelabnyc/thelab-ci-components/precommit@0.4.0
  - component: gitlab.com/thelabnyc/thelab-ci-components/publish-gitlab-release@0.4.0

test:
  stage: test
  image: "registry.gitlab.com/thelabnyc/python:${IMAGE}"
  script:
    - uv sync
    - uv run tox
  parallel:
    matrix:
      - IMAGE: py311
        TOX_SKIP_ENV: "^(?!py311)"
      - IMAGE: py312
        TOX_SKIP_ENV: "^(?!py312)"
      - IMAGE: py313
        TOX_SKIP_ENV: "^(?!py313)"

publish-to-pypi:
  stage: release
  image: registry.gitlab.com/thelabnyc/python:3.13.915@sha256:21e471cb32033b2ccf27c4bfcbe7ccea3b2b2dd742951ecbc3e2db2792c4b378
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
  environment:
    name: release
    deployment_tier: production
  script:
    - pip install twine
    # Build package
    - uv build
    # Publish to Gitlab's package registry
    - export TWINE_USERNAME=gitlab-ci-token
    - export TWINE_PASSWORD=${CI_JOB_TOKEN}
    - python -m twine upload
      --repository-url https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
      dist/*
